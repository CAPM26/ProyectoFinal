/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Conexion.ClsConexion;
import Dominio.ZombieDTO;
import JDBC.ZombieDAO_JDBC;
import java.sql.*;

/**
 *
 * @author Cesar Perez
 */
public class zombiesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form zombiesJPanel
     */
    public zombiesJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgzombi = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mensajeTL = new javax.swing.JLabel();
        idZombiTF = new javax.swing.JTextField();
        nombreZombiTF = new javax.swing.JTextField();
        durezaZombiCB = new javax.swing.JComboBox<>();
        buscarZombiButton = new javax.swing.JButton();
        agregarZombiButton = new javax.swing.JButton();
        editarZombiButton = new javax.swing.JButton();
        borrarZombiButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        limpiarButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 141, 213));

        bgzombi.setBackground(new java.awt.Color(254, 213, 139));
        bgzombi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(217, 157, 43));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ZOMBIES");
        bgzombi.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 0, 540, 40));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(42, 48, 83));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID:");
        bgzombi.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 70, 30));

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(42, 48, 83));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("NOMBRE:");
        bgzombi.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 70, 30));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(42, 48, 83));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("DUREZA:");
        bgzombi.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 70, 30));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(42, 48, 83));
        jLabel5.setText("MENSAJE:");
        bgzombi.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 70, 30));

        mensajeTL.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        mensajeTL.setForeground(new java.awt.Color(42, 48, 83));
        mensajeTL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bgzombi.add(mensajeTL, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 430, 30));

        idZombiTF.setBackground(new java.awt.Color(255, 255, 255));
        idZombiTF.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        idZombiTF.setForeground(new java.awt.Color(42, 48, 83));
        idZombiTF.setToolTipText("id del zombie");
        bgzombi.add(idZombiTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 200, 30));

        nombreZombiTF.setBackground(new java.awt.Color(255, 255, 255));
        nombreZombiTF.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        nombreZombiTF.setForeground(new java.awt.Color(42, 48, 83));
        nombreZombiTF.setToolTipText("nombre del zombie");
        bgzombi.add(nombreZombiTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 200, 30));

        durezaZombiCB.setBackground(new java.awt.Color(255, 255, 255));
        durezaZombiCB.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        durezaZombiCB.setForeground(new java.awt.Color(42, 48, 83));
        durezaZombiCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Baja", "Media", "Alta", "Dura", "Imbatible", "Desconocida" }));
        bgzombi.add(durezaZombiCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 200, 30));

        buscarZombiButton.setBackground(new java.awt.Color(235, 185, 126));
        buscarZombiButton.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        buscarZombiButton.setForeground(new java.awt.Color(42, 48, 83));
        buscarZombiButton.setText("BUSCAR");
        buscarZombiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarZombiButtonActionPerformed(evt);
            }
        });
        bgzombi.add(buscarZombiButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 90, 30));

        agregarZombiButton.setBackground(new java.awt.Color(235, 185, 126));
        agregarZombiButton.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        agregarZombiButton.setForeground(new java.awt.Color(42, 48, 83));
        agregarZombiButton.setText("AGREGAR");
        agregarZombiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarZombiButtonActionPerformed(evt);
            }
        });
        bgzombi.add(agregarZombiButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 90, 30));

        editarZombiButton.setBackground(new java.awt.Color(235, 185, 126));
        editarZombiButton.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        editarZombiButton.setForeground(new java.awt.Color(42, 48, 83));
        editarZombiButton.setText("EDITAR");
        editarZombiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarZombiButtonActionPerformed(evt);
            }
        });
        bgzombi.add(editarZombiButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, 90, 30));

        borrarZombiButton.setBackground(new java.awt.Color(235, 185, 126));
        borrarZombiButton.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        borrarZombiButton.setForeground(new java.awt.Color(42, 48, 83));
        borrarZombiButton.setText("BORRAR");
        borrarZombiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarZombiButtonActionPerformed(evt);
            }
        });
        bgzombi.add(borrarZombiButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 90, 30));
        bgzombi.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 360, 20));

        limpiarButton.setBackground(new java.awt.Color(235, 185, 126));
        limpiarButton.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        limpiarButton.setForeground(new java.awt.Color(42, 48, 83));
        limpiarButton.setText("LIMPIAR");
        limpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarButtonActionPerformed(evt);
            }
        });
        bgzombi.add(limpiarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 90, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgzombi, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgzombi, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void agregarZombiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarZombiButtonActionPerformed
        
        Connection conn = null;
        try {
            conn = ClsConexion.getConnection();
            if (conn.getAutoCommit()) {
                conn.setAutoCommit(false);
            }
            
            ZombieDAO_JDBC zjdbc = new ZombieDAO_JDBC(conn);
            ZombieDTO agregarZombi = new ZombieDTO();
            
            agregarZombi.setNombre_zombie(nombreZombiTF.getText());
            agregarZombi.setDureza_zombie(durezaZombiCB.getSelectedItem().toString());
            
            zjdbc.insert(agregarZombi);
                conn.commit();
            mensajeTL.setText("Commit realizado, zombie ingresado");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            mensajeTL.setText("Error al insertar, entramos al rollback");
            try {
                conn.rollback();
            } catch (SQLException ex1) {
                mensajeTL.setText("Error SQL: "+ex1.getMessage());
                ex1.printStackTrace(System.out);
            }
        }
        
    }//GEN-LAST:event_agregarZombiButtonActionPerformed

    private void editarZombiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarZombiButtonActionPerformed
        
        Connection conn = null;
        try {
            conn = ClsConexion.getConnection();
            if (conn.getAutoCommit()) {
                conn.setAutoCommit(false);
            }

            ZombieDAO_JDBC zjdbc = new ZombieDAO_JDBC(conn); 
            ZombieDTO editarZombi = new ZombieDTO();
            
            editarZombi.setId_zombie(Integer.parseInt(idZombiTF.getText()));
            editarZombi.setNombre_zombie(nombreZombiTF.getText());
            editarZombi.setDureza_zombie(durezaZombiCB.getSelectedItem().toString());
            zjdbc.update(editarZombi);
                conn.commit();
            mensajeTL.setText("Commit realizado, zombie actualizado");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            mensajeTL.setText("Error al actualizar, entramos al rollback");
            try {
                conn.rollback();
            } catch (SQLException ex1) {
                mensajeTL.setText("Error SQL: "+ex1.getMessage());
                ex1.printStackTrace(System.out);
            }
        }
        
        
    }//GEN-LAST:event_editarZombiButtonActionPerformed

    private void borrarZombiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarZombiButtonActionPerformed
       
                
         Connection conn = null;

        try {
            conn = ClsConexion.getConnection();
            if (conn.getAutoCommit()) {
                conn.setAutoCommit(false);
            }

            ZombieDAO_JDBC zjdbc = new ZombieDAO_JDBC(conn); 
            ZombieDTO borrarZombi = new ZombieDTO();
            
            borrarZombi.setId_zombie(Integer.parseInt(idZombiTF.getText()));
            borrarZombi.setNombre_zombie(nombreZombiTF.getText());
            borrarZombi.setDureza_zombie(durezaZombiCB.getSelectedItem().toString());
            zjdbc.delete(borrarZombi);
                conn.commit();
            mensajeTL.setText("Commit realizado, zombie eliminado");
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            mensajeTL.setText("Error al eliminar, entramos al rollback");
            try {
                conn.rollback();
            } catch (SQLException ex1) {
                mensajeTL.setText("Error SQL: "+ex1.getMessage());
                ex1.printStackTrace(System.out);
            }
        }
    }//GEN-LAST:event_borrarZombiButtonActionPerformed

    private void buscarZombiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarZombiButtonActionPerformed
        
        Connection conn = null;
        try {
            conn = ClsConexion.getConnection();
            if (conn.getAutoCommit()) {
                conn.setAutoCommit(false);
            }

            ZombieDAO_JDBC zjdbc = new ZombieDAO_JDBC(conn); 
            ZombieDTO buscarZombi = new ZombieDTO();
            buscarZombi = zjdbc.select(Integer.parseInt(idZombiTF.getText()));
            
            nombreZombiTF.setText(buscarZombi.getNombre_zombie());
            for (int i = 0; i < 5; i++) {
                if (buscarZombi.getDureza_zombie().equalsIgnoreCase(durezaZombiCB.getSelectedItem().toString())) {
                    conn.commit();
                    mensajeTL.setText("Commit realizado, zombie buscado");
                    break;
                }
                else{
                    durezaZombiCB.setSelectedIndex(i);
                }
            }
            conn.commit();
        } catch (SQLException ex) {
            ex.printStackTrace(System.out);
            mensajeTL.setText("Error al buscar, entramos al rollback");
            try {
                conn.rollback();
            } catch (SQLException ex1) {
                mensajeTL.setText("Error SQL: "+ex1.getMessage());
                ex1.printStackTrace(System.out);
            }
        }
        
    }//GEN-LAST:event_buscarZombiButtonActionPerformed

    //-------------------------------------------FUNCIONES-----------------------------------------
    
    
    private void limpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarButtonActionPerformed
        idZombiTF.setText(null);
        nombreZombiTF.setText(null);
        durezaZombiCB.setSelectedIndex(0);
    }//GEN-LAST:event_limpiarButtonActionPerformed

//     public Connection TryCone(){
//        Connection conn = null;
//        try {
//            conn = ClsConexion.getConnection();
//            if (conn.getAutoCommit()) {
//                conn.setAutoCommit(false);
//            }
//        } catch (Exception e) {
//            System.out.println("Error en conexión: " + e.getMessage());
//        }
//        return conn;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarZombiButton;
    private javax.swing.JPanel bgzombi;
    private javax.swing.JButton borrarZombiButton;
    private javax.swing.JButton buscarZombiButton;
    private javax.swing.JComboBox<String> durezaZombiCB;
    private javax.swing.JButton editarZombiButton;
    private javax.swing.JTextField idZombiTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiarButton;
    private javax.swing.JLabel mensajeTL;
    private javax.swing.JTextField nombreZombiTF;
    // End of variables declaration//GEN-END:variables
}
